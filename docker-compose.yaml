services:

  doc-search-service:
    container_name: quanta_search_api
    build:
      context: ./quanta-search-service/quanta-search-api
      dockerfile: doc-api.Dockerfile
    
    user: root

    ports:
      - 4455:4455
    
    volumes:
      - ./ameya-inverted-index:/app/ameya-inverted-index
      - ./quanta-search-service/quanta-search-api/temp:/app/temp
      - ./quanta-search-service/quanta-search-api/router:/app/router
      - ./quanta-search-service/quanta-search-api/schemas:/app/schemas
      - ./quanta-search-service/quanta-search-api/utils:/app/utils

      
    
    networks:
      - app_network

    env_file:
      - ./.env

    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1G
        reservations:
          cpus: '1.0'
          memory: 1G
          
    restart: on-failure

    command: "uvicorn main.api:app --host 0.0.0.0 --port 4455 --reload"

  rabbitmq_pdf_parser_dev:
    image: rabbitmq:3.12.1-management
    container_name: quanta_search_rabbitmq
    restart: always
    ports:
      - "5679:5672"
      - "15769:15672"

    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

    networks:
      - app_network


  redis_service:
    image: redis:alpine
    container_name: quanta_search_redis

    ports:
      - 6382:6379

    networks:
      - app_network
    command: redis-server --appendonly yes
    restart: always


  docsearch_consumer_opensource:
    build:
        context: ./quanta-search-service/quanta-search-consumer
        dockerfile: consumer.Dockerfile
    user: root
    container_name: quanta_search_consumer
    deploy:
      resources:
        limits:
          cpus: '5.0'
          memory: 8G
        reservations:
          cpus: '2.0'
          memory: 4G
    
    volumes:
      - ./ameya-inverted-index:/app/ameya-inverted-index
      - ./quanta-search-service/temp:/app/temp

    env_file:
      - ./.env
    command: sh -c 'sleep 2 && export PYTHONPATH="`pwd`" && python3 /app/event_driven/consumer.py'
    
    networks:
      - app_network

volumes:
  rabbitmq_data:
    driver: local
  
  redis_data:
    driver: local


networks:
    prod_audit_network:
        external: true
    app_network:
        external: true